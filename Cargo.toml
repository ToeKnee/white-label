[package]
name = "white-label"
version = "0.1.0"
edition = "2021"
authors = ["Anthony Batchelor <tony@ynottony.net>"]

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
anyhow = "1.0.94"
async-broadcast = { version = "0.7.2", optional = true }
async-trait = "0.1.83"
axum = { version = "0.7", optional = true, features = ["macros"] }
axum-login = "0.16.0"
axum-macros = { version = "0.4.2", optional = true }
axum_session = { version = "0.14.4", optional = true }
axum_session_auth = { version = "0.14.1", features = [
    "advanced",
], optional = true }
axum_session_sqlx = { version = "0.3.0", optional = true }
bcrypt = { version = "0.16.0", optional = true }
chrono = { version = "0.4.39", features = ["serde"] }
console_error_panic_hook = { version = "0.1", optional = true }
dashmap = { version = "6.1.0", optional = true }
deunicode = "1.6.0"
dotenvy = "0.15.7"
futures = "0.3.31"
getrandom = { version = "0.2.15", features = ["js"] }
http = "1"
leptos = { version = "0.7.0" }
leptos_axum = { version = "0.7.0", optional = true }
leptos_meta = { version = "0.7.0" }
leptos_router = { version = "0.7.0" }
markdown = "1.0.0-alpha.21"
once_cell = { version = "1.20.2", optional = true }
password-auth = "1.0.0"
reactive_stores = "0.1.0"
reactive_stores_macro = "0.1.0"
regex = "1.11.1"
serde = { version = "1.0.215", features = ["derive"] }
server_fn = { version = "0.7.5", features = [
    "serde-lite",
    "rkyv",
    "multipart",
    "cbor",
] }
simple_logger = "5.0.0"
sqlx = { version = "0.8.2", features = [
    "postgres",
    "migrate",
    "runtime-tokio",
    "chrono",
    "json",
], optional = true }
thiserror = "2"
time = "0.3.37"
tokio = { version = "1", features = ["rt-multi-thread"], optional = true }
tower = { version = "0.5", optional = true }
tower-http = { version = "0.6", features = ["fs", "limit"], optional = true }
tower-sessions = "0.13.0"
tower-sessions-sqlx-store = { version = "0.14.2", features = [
    "postgres",
], optional = true }
tracing = { version = "0.1", optional = true }
tracing-subscriber = { version = "0.3.19", features = ["fmt"] }
tracing-wasm = { version = "0.2.1", optional = true }
wasm-bindgen = "=0.2.99"
web-sys = { version = "0.3.67", features = ["FileList", "File"] }

[features]
default = ["ssr"]
hydrate = ["leptos/hydrate", "dep:tracing-wasm", "dep:console_error_panic_hook"]
ssr = [
    "dep:async-broadcast",
    "dep:axum",
    "dep:axum-macros",
    "dep:axum_session",
    "dep:axum_session_auth",
    "dep:axum_session_sqlx",
    "dep:bcrypt",
    "dep:dashmap",
    "dep:leptos_axum",
    "dep:once_cell",
    "dep:sqlx",
    "dep:tokio",
    "dep:tower",
    "dep:tower-http",
    "dep:tower-sessions-sqlx-store",
    "dep:tracing",
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_router/ssr",
]
tracing-wasm = ["dep:tracing-wasm"]

# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"

[dev-dependencies]
axum-test = "17.0.1"

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "white-label"

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/main.scss"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The tailwind input file.
#
# Optional, Activates the tailwind build
tailwind-input-file = "style/tailwind.css"

# The tailwind config file.
#
# Optional, defaults to "tailwind.config.js" which if is not present
# is generated for you
tailwind-config-file = "tailwind.config.js"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"

# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"

[lints.clippy]
unwrap_used = "warn"
expect_used = "warn"
